; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\pin_lpc17xx.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\pin_lpc17xx.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\RTE\Device\LPC1768 -I.\RTE\File_System -I.\RTE\Network -I.\RTE\_Main -IC:\Users\Mohammad\AppData\Local\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\Users\Mohammad\AppData\Local\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\Driver\Include -IC:\Users\Mohammad\AppData\Local\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\RTOS\RTX\INC -IC:\Users\Mohammad\AppData\Local\Arm\Packs\Keil\LPC1700_DFP\2.6.0\Device\Include -IC:\Users\Mohammad\AppData\Local\Arm\Packs\Keil\LPC1700_DFP\2.6.0\RTE_Driver -IC:\Users\Mohammad\AppData\Local\Arm\Packs\Keil\MDK-Middleware\7.12.0\FileSystem\Include -IC:\Users\Mohammad\AppData\Local\Arm\Packs\Keil\MDK-Middleware\7.12.0\Network\Include -D__RTX -D__UVISION_VERSION=532 -D_RTE_ -DLPC175x_6x -D_RTE_ --omf_browse=.\objects\pin_lpc17xx.crf C:\Users\Mohammad\AppData\Local\Arm\Packs\Keil\LPC1700_DFP\2.6.0\RTE_Driver\PIN_LPC17xx.c]
                          THUMB

                          AREA ||i.PIN_Configure||, CODE, READONLY, ALIGN=2

                  PIN_Configure PROC
;;;50     */
;;;51     int32_t PIN_Configure (uint8_t port, uint8_t pin, uint8_t function, uint8_t mode, uint8_t open_drain) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  9f06              LDR      r7,[sp,#0x18]
;;;52       uint32_t regidx = 0;
00000c  2100              MOVS     r1,#0
;;;53       uint8_t pinnum = pin;
00000e  462a              MOV      r2,r5
;;;54     
;;;55       if (pin >= 16) {
000010  2d10              CMP      r5,#0x10
000012  db03              BLT      |L1.28|
;;;56         pinnum   = pin - 16U;
000014  f1a50010          SUB      r0,r5,#0x10
000018  b2c2              UXTB     r2,r0
;;;57         regidx = 1U;
00001a  2101              MOVS     r1,#1
                  |L1.28|
;;;58       }
;;;59       // Configure Pin function
;;;60       PIN_Func(port, regidx) &= ~(0x03UL << (pinnum * 2U));
00001c  f8dfc0d8          LDR      r12,|L1.248|
000020  eb0c00c4          ADD      r0,r12,r4,LSL #3
000024  f8500021          LDR      r0,[r0,r1,LSL #2]
000028  ea4f0842          LSL      r8,r2,#1
00002c  f04f0c03          MOV      r12,#3
000030  fa0cfc08          LSL      r12,r12,r8
000034  ea20000c          BIC      r0,r0,r12
000038  f8df80bc          LDR      r8,|L1.248|
00003c  eb080cc4          ADD      r12,r8,r4,LSL #3
000040  f84c0021          STR      r0,[r12,r1,LSL #2]
;;;61       PIN_Func(port, regidx) |= ((uint32_t)function) << (pinnum * 2U);
000044  46c4              MOV      r12,r8
000046  eb0c00c4          ADD      r0,r12,r4,LSL #3
00004a  f8500021          LDR      r0,[r0,r1,LSL #2]
00004e  ea4f0c42          LSL      r12,r2,#1
000052  fa06fc0c          LSL      r12,r6,r12
000056  ea40000c          ORR      r0,r0,r12
00005a  eb080cc4          ADD      r12,r8,r4,LSL #3
00005e  f84c0021          STR      r0,[r12,r1,LSL #2]
;;;62     
;;;63       // Configure Register mode
;;;64       PIN_Mode(port, regidx) &= ~(0x03UL << (pinnum * 2U));
000062  4825              LDR      r0,|L1.248|
000064  3040              ADDS     r0,r0,#0x40
000066  eb0000c4          ADD      r0,r0,r4,LSL #3
00006a  f8500021          LDR      r0,[r0,r1,LSL #2]
00006e  ea4f0842          LSL      r8,r2,#1
000072  f04f0c03          MOV      r12,#3
000076  fa0cfc08          LSL      r12,r12,r8
00007a  ea200c0c          BIC      r12,r0,r12
00007e  481e              LDR      r0,|L1.248|
000080  3040              ADDS     r0,r0,#0x40
000082  eb0000c4          ADD      r0,r0,r4,LSL #3
000086  f840c021          STR      r12,[r0,r1,LSL #2]
;;;65       PIN_Mode(port, regidx) |= ((uint32_t)mode) << (pinnum * 2U);
00008a  481b              LDR      r0,|L1.248|
00008c  3040              ADDS     r0,r0,#0x40
00008e  eb0000c4          ADD      r0,r0,r4,LSL #3
000092  f8500021          LDR      r0,[r0,r1,LSL #2]
000096  ea4f0c42          LSL      r12,r2,#1
00009a  fa03fc0c          LSL      r12,r3,r12
00009e  ea40000c          ORR      r0,r0,r12
0000a2  f8dfc054          LDR      r12,|L1.248|
0000a6  f10c0c40          ADD      r12,r12,#0x40
0000aa  eb0c0cc4          ADD      r12,r12,r4,LSL #3
0000ae  f84c0021          STR      r0,[r12,r1,LSL #2]
;;;66       
;;;67       // Configure Open drain mode
;;;68       if (open_drain == PIN_PINMODE_OPENDRAIN) {
0000b2  2f01              CMP      r7,#1
0000b4  d10e              BNE      |L1.212|
;;;69         PIN_ModeOp(port) |=  (0x01UL << pin);
0000b6  4810              LDR      r0,|L1.248|
0000b8  3068              ADDS     r0,r0,#0x68
0000ba  f850c024          LDR      r12,[r0,r4,LSL #2]
0000be  2001              MOVS     r0,#1
0000c0  40a8              LSLS     r0,r0,r5
0000c2  ea4c0000          ORR      r0,r12,r0
0000c6  f8dfc030          LDR      r12,|L1.248|
0000ca  f10c0c68          ADD      r12,r12,#0x68
0000ce  f84c0024          STR      r0,[r12,r4,LSL #2]
0000d2  e00d              B        |L1.240|
                  |L1.212|
;;;70       }
;;;71       else {
;;;72         PIN_ModeOp(port) &= ~(0x01UL << pin);
0000d4  4808              LDR      r0,|L1.248|
0000d6  3068              ADDS     r0,r0,#0x68
0000d8  f850c024          LDR      r12,[r0,r4,LSL #2]
0000dc  2001              MOVS     r0,#1
0000de  40a8              LSLS     r0,r0,r5
0000e0  ea2c0000          BIC      r0,r12,r0
0000e4  f8dfc010          LDR      r12,|L1.248|
0000e8  f10c0c68          ADD      r12,r12,#0x68
0000ec  f84c0024          STR      r0,[r12,r4,LSL #2]
                  |L1.240|
;;;73       }
;;;74       return(0);  
0000f0  2000              MOVS     r0,#0
;;;75     }
0000f2  e8bd81f0          POP      {r4-r8,pc}
;;;76     
                          ENDP

0000f6  0000              DCW      0x0000
                  |L1.248|
                          DCD      0x4002c000

                          AREA ||i.PIN_ConfigureI2C0Pins||, CODE, READONLY, ALIGN=2

                  PIN_ConfigureI2C0Pins PROC
;;;110    */
;;;111    int32_t PIN_ConfigureI2C0Pins (uint8_t i2cPinMode, bool enableFilterSlewRate)
000000  4602              MOV      r2,r0
;;;112    {
000002  460b              MOV      r3,r1
;;;113      uint32_t regVal = 0U;
000004  2100              MOVS     r1,#0
;;;114    
;;;115      if (i2cPinMode == PIN_I2C_Fast_Plus_Mode){
000006  2a02              CMP      r2,#2
000008  d101              BNE      |L2.14|
;;;116        regVal |= PIN_I2CPADCFG_SCLDRV0 | PIN_I2CPADCFG_SDADRV0;
00000a  f0410105          ORR      r1,r1,#5
                  |L2.14|
;;;117      }
;;;118    
;;;119      if (enableFilterSlewRate == false){
00000e  b90b              CBNZ     r3,|L2.20|
;;;120        regVal |= PIN_I2CPADCFG_SCLI2C0 | PIN_I2CPADCFG_SDAI2C0;
000010  f041010a          ORR      r1,r1,#0xa
                  |L2.20|
;;;121      }
;;;122      LPC_PINCON->I2CPADCFG = regVal;
000014  4801              LDR      r0,|L2.28|
000016  67c1              STR      r1,[r0,#0x7c]
;;;123      return(0);
000018  2000              MOVS     r0,#0
;;;124    }
00001a  4770              BX       lr
                          ENDP

                  |L2.28|
                          DCD      0x4002c000

                          AREA ||i.PIN_ConfigureTPIU||, CODE, READONLY, ALIGN=2

                  PIN_ConfigureTPIU PROC
;;;86     */
;;;87     int32_t PIN_ConfigureTPIU (bool enable)
000000  4601              MOV      r1,r0
;;;88     {
;;;89       if (enable == true) {
000002  2901              CMP      r1,#1
000004  d106              BNE      |L3.20|
;;;90         LPC_PINCON->PINSEL10 |=  (0x01UL << 3);
000006  4807              LDR      r0,|L3.36|
000008  6a80              LDR      r0,[r0,#0x28]
00000a  f0400008          ORR      r0,r0,#8
00000e  4a05              LDR      r2,|L3.36|
000010  6290              STR      r0,[r2,#0x28]
000012  e005              B        |L3.32|
                  |L3.20|
;;;91       } else {
;;;92         LPC_PINCON->PINSEL10 &= ~(0x01UL << 3);
000014  4803              LDR      r0,|L3.36|
000016  6a80              LDR      r0,[r0,#0x28]
000018  f0200008          BIC      r0,r0,#8
00001c  4a01              LDR      r2,|L3.36|
00001e  6290              STR      r0,[r2,#0x28]
                  |L3.32|
;;;93       }
;;;94       return(0);
000020  2000              MOVS     r0,#0
;;;95     }
000022  4770              BX       lr
;;;96     
                          ENDP

                  |L3.36|
                          DCD      0x4002c000

;*** Start embedded assembler ***

#line 1 "C:\\Users\\Mohammad\\AppData\\Local\\Arm\\Packs\\Keil\\LPC1700_DFP\\2.6.0\\RTE_Driver\\PIN_LPC17xx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_PIN_LPC17xx_c_ccddbb0a____REV16|
#line 481 "C:\\Users\\Mohammad\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS\\5.7.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___13_PIN_LPC17xx_c_ccddbb0a____REV16| PROC
#line 482

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_PIN_LPC17xx_c_ccddbb0a____REVSH|
#line 496
|__asm___13_PIN_LPC17xx_c_ccddbb0a____REVSH| PROC
#line 497

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___13_PIN_LPC17xx_c_ccddbb0a____RRX|
#line 683
|__asm___13_PIN_LPC17xx_c_ccddbb0a____RRX| PROC
#line 684

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
